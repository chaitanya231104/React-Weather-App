{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KIIT0001\\\\Desktop\\\\React Weather App\\\\src\\\\context\\\\weather.context.js\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useState } from \"react\";\nimport { DEFAULT_PLACE, MEASUREMENT_SYSTEMS, UNITS } from \"../constants\";\nimport { getWeatherData } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherContext = /*#__PURE__*/createContext();\nfunction WeatherProvider({\n  children\n}) {\n  _s();\n  const [place, setPlace] = useState(DEFAULT_PLACE);\n  const [loading, setLoading] = useState(true);\n  const [currentWeather, setCurrentWeather] = useState({});\n  const [hourlyForecast, setHourlyForecast] = useState([]);\n  const [dailyForecast, setDailyForecast] = useState([]);\n  const [measurementSystems, setMeasurementSystem] = useState(MEASUREMENT_SYSTEMS.AUTO);\n  const [units, setUnits] = useState({});\n  useEffect(() => {\n    async function _getWeatherData() {\n      setLoading(true);\n      const cw = await getWeatherData('current', place.place_id, 'auto');\n      setCurrentWeather(cw.current);\n      setUnits(UNITS[cw.units]);\n      const hf = await getWeatherData('hourly', place.place_id, 'auto');\n      setHourlyForecast(hf.hourly.data);\n      const df = await getWeatherData('daily', place.place_id, 'auto');\n      setDailyForecast(df.daily.data);\n      setLoading(false);\n    }\n    _getWeatherData();\n  }, [place]);\n  return /*#__PURE__*/_jsxDEV(WeatherContext.Provider, {\n    value: {\n      place,\n      loading,\n      currentWeather,\n      hourlyForecast,\n      dailyForecast,\n      measurementSystems,\n      setMeasurementSystem\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 3\n  }, this);\n}\n_s(WeatherProvider, \"M/AItkXcAHyrqZ7pjbIdCYenjfY=\");\n_c = WeatherProvider;\nexport { WeatherProvider };\nexport default WeatherContext;\nvar _c;\n$RefreshReg$(_c, \"WeatherProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","DEFAULT_PLACE","MEASUREMENT_SYSTEMS","UNITS","getWeatherData","jsxDEV","_jsxDEV","WeatherContext","WeatherProvider","children","_s","place","setPlace","loading","setLoading","currentWeather","setCurrentWeather","hourlyForecast","setHourlyForecast","dailyForecast","setDailyForecast","measurementSystems","setMeasurementSystem","AUTO","units","setUnits","_getWeatherData","cw","place_id","current","hf","hourly","data","df","daily","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/KIIT0001/Desktop/React Weather App/src/context/weather.context.js"],"sourcesContent":["import { createContext, useEffect, useState } from \"react\";\r\nimport {\r\n    DEFAULT_PLACE, \r\n    MEASUREMENT_SYSTEMS,\r\n    UNITS\r\n} from \"../constants\"\r\nimport { getWeatherData } from \"../api\";\r\n\r\nconst WeatherContext = createContext();\r\n\r\nfunction WeatherProvider({ children }) {\r\n    const [place,setPlace] = useState(DEFAULT_PLACE);\r\n    const [loading,setLoading] = useState(true);\r\n    const [currentWeather,setCurrentWeather] = useState({});\r\n    const [hourlyForecast,setHourlyForecast] = useState([]);\r\n    const [dailyForecast,setDailyForecast] = useState([]);\r\n    const [measurementSystems,setMeasurementSystem] = useState(\r\n        MEASUREMENT_SYSTEMS.AUTO\r\n    );\r\n    const [units,setUnits] = useState({});\r\n\r\n    useEffect(() => {\r\n        async function _getWeatherData() {\r\n            setLoading(true);\r\n\r\n            const cw = await getWeatherData(\r\n                'current',\r\n                place.place_id,\r\n                'auto'\r\n            );\r\n            setCurrentWeather(cw.current);\r\n            setUnits(UNITS[cw.units])\r\n\r\n            const hf = await getWeatherData(\r\n                'hourly',\r\n                place.place_id,\r\n                'auto'\r\n            );\r\n            setHourlyForecast(hf.hourly.data)\r\n            \r\n            const df = await getWeatherData(\r\n                'daily',\r\n                place.place_id,\r\n                'auto'\r\n            );\r\n            setDailyForecast(df.daily.data)\r\n\r\n            setLoading(false);\r\n        }\r\n        _getWeatherData();\r\n    },[place])\r\n  \r\n    return (\r\n  <WeatherContext.Provider value={{\r\n    place,\r\n    loading,\r\n    currentWeather,\r\n    hourlyForecast,\r\n    dailyForecast,\r\n    measurementSystems,\r\n    setMeasurementSystem,\r\n    }}\r\n    >\r\n  {children}\r\n  </WeatherContext.Provider>\r\n  );\r\n}\r\n\r\nexport{WeatherProvider}\r\nexport default  WeatherContext; "],"mappings":";;AAAA,SAASA,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SACIC,aAAa,EACbC,mBAAmB,EACnBC,KAAK,QACF,cAAc;AACrB,SAASC,cAAc,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,cAAc,gBAAGT,aAAa,CAAC,CAAC;AAEtC,SAASU,eAAeA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACnC,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAGZ,QAAQ,CAACC,aAAa,CAAC;EAChD,MAAM,CAACY,OAAO,EAACC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC3C,MAAM,CAACe,cAAc,EAACC,iBAAiB,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC,CAAC;EACvD,MAAM,CAACiB,cAAc,EAACC,iBAAiB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACvD,MAAM,CAACmB,aAAa,EAACC,gBAAgB,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACrD,MAAM,CAACqB,kBAAkB,EAACC,oBAAoB,CAAC,GAAGtB,QAAQ,CACtDE,mBAAmB,CAACqB,IACxB,CAAC;EACD,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAGzB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAErCD,SAAS,CAAC,MAAM;IACZ,eAAe2B,eAAeA,CAAA,EAAG;MAC7BZ,UAAU,CAAC,IAAI,CAAC;MAEhB,MAAMa,EAAE,GAAG,MAAMvB,cAAc,CAC3B,SAAS,EACTO,KAAK,CAACiB,QAAQ,EACd,MACJ,CAAC;MACDZ,iBAAiB,CAACW,EAAE,CAACE,OAAO,CAAC;MAC7BJ,QAAQ,CAACtB,KAAK,CAACwB,EAAE,CAACH,KAAK,CAAC,CAAC;MAEzB,MAAMM,EAAE,GAAG,MAAM1B,cAAc,CAC3B,QAAQ,EACRO,KAAK,CAACiB,QAAQ,EACd,MACJ,CAAC;MACDV,iBAAiB,CAACY,EAAE,CAACC,MAAM,CAACC,IAAI,CAAC;MAEjC,MAAMC,EAAE,GAAG,MAAM7B,cAAc,CAC3B,OAAO,EACPO,KAAK,CAACiB,QAAQ,EACd,MACJ,CAAC;MACDR,gBAAgB,CAACa,EAAE,CAACC,KAAK,CAACF,IAAI,CAAC;MAE/BlB,UAAU,CAAC,KAAK,CAAC;IACrB;IACAY,eAAe,CAAC,CAAC;EACrB,CAAC,EAAC,CAACf,KAAK,CAAC,CAAC;EAEV,oBACFL,OAAA,CAACC,cAAc,CAAC4B,QAAQ;IAACC,KAAK,EAAE;MAC9BzB,KAAK;MACLE,OAAO;MACPE,cAAc;MACdE,cAAc;MACdE,aAAa;MACbE,kBAAkB;MAClBC;IACA,CAAE;IAAAb,QAAA,EAEHA;EAAQ;IAAA4B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACgB,CAAC;AAE5B;AAAC9B,EAAA,CAxDQF,eAAe;AAAAiC,EAAA,GAAfjC,eAAe;AA0DxB,SAAOA,eAAe;AACtB,eAAgBD,cAAc;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}