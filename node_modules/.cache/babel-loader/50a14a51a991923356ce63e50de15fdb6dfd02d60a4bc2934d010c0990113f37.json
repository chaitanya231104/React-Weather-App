{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KIIT0001\\\\Desktop\\\\React Weather App\\\\src\\\\context\\\\weather.context.js\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useState } from \"react\";\nimport { DEFAULT_PLACE } from \"../utlis\";\nimport { getWeatherData } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherContext = /*#__PURE__*/createContext();\nfunction WeatherProvider({\n  children\n}) {\n  _s();\n  const [place, setPlace] = useState(DEFAULT_PLACE);\n  const [loading, setLoading] = useState(true);\n  const [currentWeather, setCurrentWeather] = useState({});\n  const [hourlyForecast, setHourlyForecast] = useState([]);\n  const [dailyForecast, setDailyForecast] = useState([]);\n  useEffect(() => {\n    async function _getWeatherData() {\n      setLoading(true);\n      const cw = await getWeatherData(\"daily\", place.place_id, 'auto');\n      setLoading(false);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(WeatherContext.Provider, {\n    value: {\n      place,\n      loading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 3\n  }, this);\n}\n_s(WeatherProvider, \"xs/0EmWr3yHK62P+BL+y8V94s7Y=\");\n_c = WeatherProvider;\nexport { WeatherProvider };\nexport default WeatherContext;\nvar _c;\n$RefreshReg$(_c, \"WeatherProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","DEFAULT_PLACE","getWeatherData","jsxDEV","_jsxDEV","WeatherContext","WeatherProvider","children","_s","place","setPlace","loading","setLoading","currentWeather","setCurrentWeather","hourlyForecast","setHourlyForecast","dailyForecast","setDailyForecast","_getWeatherData","cw","place_id","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/KIIT0001/Desktop/React Weather App/src/context/weather.context.js"],"sourcesContent":["import { createContext, useEffect, useState } from \"react\";\r\nimport {DEFAULT_PLACE} from \"../utlis\"\r\nimport { getWeatherData } from \"../api\";\r\n\r\nconst WeatherContext = createContext();\r\n\r\nfunction WeatherProvider({ children }) {\r\n    const [place,setPlace] = useState(DEFAULT_PLACE);\r\n    const [loading,setLoading] = useState(true);\r\n    const [currentWeather,setCurrentWeather] = useState({});\r\n    const [hourlyForecast,setHourlyForecast] = useState([]);\r\n    const [dailyForecast,setDailyForecast] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function _getWeatherData() {\r\n            setLoading(true);\r\n\r\n            const cw = await getWeatherData(\"daily\",place.place_id,'auto')\r\n\r\n            setLoading(false);\r\n        }\r\n    })\r\n  \r\n    return (\r\n  <WeatherContext.Provider value={{place,loading}}>\r\n  {children}\r\n  </WeatherContext.Provider>\r\n  );\r\n}\r\n\r\nexport{WeatherProvider}\r\nexport default  WeatherContext; "],"mappings":";;AAAA,SAASA,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAAQC,aAAa,QAAO,UAAU;AACtC,SAASC,cAAc,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,cAAc,gBAAGP,aAAa,CAAC,CAAC;AAEtC,SAASQ,eAAeA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACnC,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAGV,QAAQ,CAACC,aAAa,CAAC;EAChD,MAAM,CAACU,OAAO,EAACC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC3C,MAAM,CAACa,cAAc,EAACC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC,CAAC;EACvD,MAAM,CAACe,cAAc,EAACC,iBAAiB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACvD,MAAM,CAACiB,aAAa,EAACC,gBAAgB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAErDD,SAAS,CAAC,MAAM;IACZ,eAAeoB,eAAeA,CAAA,EAAG;MAC7BP,UAAU,CAAC,IAAI,CAAC;MAEhB,MAAMQ,EAAE,GAAG,MAAMlB,cAAc,CAAC,OAAO,EAACO,KAAK,CAACY,QAAQ,EAAC,MAAM,CAAC;MAE9DT,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC,CAAC;EAEF,oBACFR,OAAA,CAACC,cAAc,CAACiB,QAAQ;IAACC,KAAK,EAAE;MAACd,KAAK;MAACE;IAAO,CAAE;IAAAJ,QAAA,EAC/CA;EAAQ;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACgB,CAAC;AAE5B;AAACnB,EAAA,CAtBQF,eAAe;AAAAsB,EAAA,GAAftB,eAAe;AAwBxB,SAAOA,eAAe;AACtB,eAAgBD,cAAc;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}