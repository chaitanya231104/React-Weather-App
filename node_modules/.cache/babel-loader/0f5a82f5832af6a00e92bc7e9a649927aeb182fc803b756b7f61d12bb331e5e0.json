{"ast":null,"code":"import axios from 'axios';\nexport async function getWeatherData(endpoint, place_id, measurementSystem) {\n  const options = {\n    method: 'GET',\n    url: `https://ai-weather-by-meteosource.p.rapidapi.com/${endpoint}`,\n    params: {\n      place_id,\n      language: 'en',\n      units: measurementSystem\n    },\n    headers: {\n      'x-rapidapi-key': '1475f798demsh4ff84a4a611060bp198557jsn693e15c345ae',\n      'x-rapidapi-host': 'ai-weather-by-meteosource.p.rapidapi.com'\n    }\n  };\n  try {\n    const response = await axios.request(options);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\nasync function searchPlaces(text) {\n  const options = {\n    method: 'GET',\n    url: 'https://ai-weather-by-meteosource.p.rapidapi.com/find_places',\n    params: {\n      text: 'new',\n      language: 'en'\n    },\n    headers: {\n      'x-rapidapi-key': '1475f798demsh4ff84a4a611060bp198557jsn693e15c345ae',\n      'x-rapidapi-host': 'ai-weather-by-meteosource.p.rapidapi.com'\n    }\n  };\n  try {\n    const response = await axios.request(options);\n    console.log(response.data);\n  } catch (error) {\n    console.error(error);\n  }\n}","map":{"version":3,"names":["axios","getWeatherData","endpoint","place_id","measurementSystem","options","method","url","params","language","units","headers","response","request","data","error","console","searchPlaces","text","log"],"sources":["C:/Users/KIIT0001/Desktop/React Weather App/src/api/index.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nexport async function getWeatherData(\r\n  endpoint, \r\n  place_id, \r\n  measurementSystem\r\n) {\r\n  \r\n\r\nconst options = {\r\n  method: 'GET',\r\n  url: `https://ai-weather-by-meteosource.p.rapidapi.com/${endpoint}`,\r\n  params: {\r\n    place_id,\r\n    language: 'en',\r\n    units: measurementSystem,\r\n  },\r\n  headers: {\r\n    'x-rapidapi-key': '1475f798demsh4ff84a4a611060bp198557jsn693e15c345ae',\r\n    'x-rapidapi-host': 'ai-weather-by-meteosource.p.rapidapi.com'\r\n  }\r\n};\r\n\r\ntry {\r\n\tconst response = await axios.request(options);\r\n\treturn response.data;\r\n} catch (error) {\r\n\tconsole.error(error);\r\n}\r\n}\r\n\r\nasync function searchPlaces(text){\r\n  const options = {\r\n  method: 'GET',\r\n  url: 'https://ai-weather-by-meteosource.p.rapidapi.com/find_places',\r\n  params: {\r\n    text: 'new',\r\n    language: 'en'\r\n  },\r\n  headers: {\r\n    'x-rapidapi-key': '1475f798demsh4ff84a4a611060bp198557jsn693e15c345ae',\r\n    'x-rapidapi-host': 'ai-weather-by-meteosource.p.rapidapi.com'\r\n  }\r\n};\r\n\r\ntry {\r\n\tconst response = await axios.request(options);\r\n\tconsole.log(response.data);\r\n} catch (error) {\r\n\tconsole.error(error);\r\n}\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,eAAeC,cAAcA,CAClCC,QAAQ,EACRC,QAAQ,EACRC,iBAAiB,EACjB;EAGF,MAAMC,OAAO,GAAG;IACdC,MAAM,EAAE,KAAK;IACbC,GAAG,EAAE,oDAAoDL,QAAQ,EAAE;IACnEM,MAAM,EAAE;MACNL,QAAQ;MACRM,QAAQ,EAAE,IAAI;MACdC,KAAK,EAAEN;IACT,CAAC;IACDO,OAAO,EAAE;MACP,gBAAgB,EAAE,oDAAoD;MACtE,iBAAiB,EAAE;IACrB;EACF,CAAC;EAED,IAAI;IACH,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,OAAO,CAACR,OAAO,CAAC;IAC7C,OAAOO,QAAQ,CAACE,IAAI;EACrB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACfC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;EACrB;AACA;AAEA,eAAeE,YAAYA,CAACC,IAAI,EAAC;EAC/B,MAAMb,OAAO,GAAG;IAChBC,MAAM,EAAE,KAAK;IACbC,GAAG,EAAE,8DAA8D;IACnEC,MAAM,EAAE;MACNU,IAAI,EAAE,KAAK;MACXT,QAAQ,EAAE;IACZ,CAAC;IACDE,OAAO,EAAE;MACP,gBAAgB,EAAE,oDAAoD;MACtE,iBAAiB,EAAE;IACrB;EACF,CAAC;EAED,IAAI;IACH,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,OAAO,CAACR,OAAO,CAAC;IAC7CW,OAAO,CAACG,GAAG,CAACP,QAAQ,CAACE,IAAI,CAAC;EAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACfC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;EACrB;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}